version: "3.3"

services:
  traefik:
    image: traefik:v2.1.1
    container_name: traefik 
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command:
      - "--api=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--metrics.prometheus=true"
      - "--accesslog=true"
      - "--accesslog.filepath=/opt/traefik/access.log"
      - "--global.sendAnonymousUsage=true"
      - "--entryPoints.http.address=:80"
      - "--entryPoints.https.address=:443"
      - "--certificatesResolvers.mytlschallenge.acme.httpChallenge=true"
      - "--certificatesResolvers.mytlschallenge.acme.httpChallenge.entryPoint=http"
      - "--certificatesresolvers.mytlschallenge.acme.email=frishi@me.com"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/opt/traefik/acme.json"
    labels:
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`services.rishighan.com`)"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.dashboard.middlewares=https-auth"

      # global redirect HTTPS
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"

      # middleware: Redirect HTTP->HTTPS
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      
      # middleware: Basic Auth
      # - "traefik.http.middlewares.https-auth.basicauth.users=admin:$$apr1$$xxxxxxxxxxxxxxx"
    # environment: 
      # - "DO_AUTH_TOKEN=721f972b5631edd716c0e574d98097a22c09e1d53bc4ecbbba8ee1f724eed41b"
    ports:
      # Port 443 is used for HTTP trafic
      - "80:80"
      # Port 443 is used for HTTPS trafic
      - "443:443"
      - "8080:8080"
    volumes:
      # production
      - /opt/traefik/:/opt/traefik/
      # The docker socket is mounted for auto-discovery of new services
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      # Attach the traefik container to the default network (which is the global "gateway" network)
      - default
    
  nats:
    image: nats
    container_name: nats
    labels:
      - traefik.enable=false
    networks:
      - default

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    environment: 
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    labels:
      - traefik.enable=false
    ports:
      - '2181:2181'
    volumes:
      - ../zookeeper/data:/bitnami/zookeeper
    networks:
      - default

# Make the externally created network "gateway" available as network "default"
networks:
  default:
    external: 
      name: gateway